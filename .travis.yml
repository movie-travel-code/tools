dist: xenial

language: go

go:
  - "1.12.x"

install:
  # The repo go langserver must be located under '$GOPATH/src/golang.org/x/tools', however we can't reset the clone
  # path. So we have to clone the repo manually.
  - git clone --depth=1 https://github.com/movie-travel-code/tools.git $GOPATH/src/golang.org/x/tools
  - cd $GOPATH/src/golang.org/x/tools
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
      git fetch origin +refs/pull/$TRAVIS_PULL_REQUEST/merge;
      git checkout -qf FETCH_HEAD;
    fi

git:
  depth: 1

before_install:
  - go get golang.org/x/sync/errgroup
  - go get golang.org/x/xerrors
  - go get github.com/hashicorp/golang-lru

matrix:
  fast_finish: true
  include:
    - name: Unit Tests & Package | Linux x64
      os: linux
      env:
        - GO111MODULE=off
        - GOPROXY=https://proxy.golang.org
        - CGO_ENABLED=0
        - ARCH=x86_64
      script:
        - go test ./internal/lsp -v
        - mkdir build
        - cd build
        - go build -ldflags "-s -w" -o go-langserver $GOPATH/src/golang.org/x/tools/gopls
        - curl -o go1.12.7.linux-amd64.tar.gz https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz
        - tar xzf go1.12.7.linux-amd64.tar.gz
        - rm -rf ./go/test
        - tar -zcf go-langserver-linux-amd64.tar.gz go-langserver go

      deploy:
        provider: releases
        skip_cleanup: true
        api_key: $GITHUB_TOKEN
        verbose: true
        file: $GOPATH/src/golang.org/x/tools/build/go-langserver-linux-amd64.tar.gz
        name: $TRAVIS_TAG
        draft: false
        prerelease: false
        overwrite: true
        on:
          all_branches: true
          tags: true

#    - name: Unit Tests & Package | Linux x86
#      os: linux
#      script:
#        - go test ./internal/lsp
#        - mkdir build
#        - cd build
#        - go build -ldflags -o go-langserver $GOPATH/src/golang.org/x/tools/gopls
#        - curl -o go1.12.7.linux-386.tar.gz https://dl.google.com/go/go1.12.7.linux-386.tar.gz
#        - tar xzf go1.12.7.linux-386.tar.gz
#        - rm -rf ./go/test
#        - tar -zcf go-langserver-linux-386.tar.gz go-langserver go
#
#      deploy:
#        provider: releases
#        skip_cleanup: true
#        api_key: $GITHUB_TOKEN
#        verbose: true
#        file: $GOPATH/src/golang.org/x/tools/build/go-langserver-linux-386.tar.gz
#        name: $TRAVIS_TAG
#        draft: false
#        prerelease: false
#        overwrite: true
#        on:
#          all_branches: true
#          tags: true

    - name: Unit Tests & Package | OSX
      os: osx
      env:
        - GO111MODULE=off
        - GOPROXY=https://proxy.golang.org
        - CGO_ENABLED=0
        - ARCH=x86_64
      script:
        - go test ./internal/lsp -v
        - mkdir build
        - cd build
        - go build -ldflags "-s -w" -o go-langserver $GOPATH/src/golang.org/x/tools/gopls
        - curl -o go1.12.7.darwin-amd64.tar.gz https://dl.google.com/go/go1.12.7.darwin-amd64.tar.gz
        - tar xzf go1.12.7.darwin-amd64.tar.gz
        - rm -rf ./go/test
        - tar -zcf go-langserver-darwin-amd64.tar.gz go-langserver go
      deploy:
        provider: releases
        skip_cleanup: true
        api_key: $GITHUB_TOKEN
        verbose: true
        file: $GOPATH/src/golang.org/x/tools/build/go-langserver-darwin-amd64.tar.gz
        file_glob: true
        name: $TRAVIS_TAG
        draft: false
        prerelease: false
        overwrite: true
        on:
          all_branches: true
          tags: true
